name: Deploy to DigitalOcean Droplet
on:
  push:
    branches: [ main ] 

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PW: ${{ secrets.DOCKERHUB_PW }}
  GITHUB_SHA: ${{ github.sha }}
  PORT: ${{ secrets.PORT }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PW: ${{ secrets.DB_PW }}
  DB_PORT: ${{ secrets.DB_PORT }}
  HOST: ${{ secrets.HOST }}
  USERNAME: ${{ secrets.USERNAME }}
  KEY: ${{ secrets.KEY }}

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.meta.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: create .env file
        run: |
          echo "PORT=${{ env.PORT }}" > .env
          echo "DB_HOST=${{ env.DB_HOST }}" >> .env
          echo "DB_PORT=${{ env.DB_PORT }}" >> .env
          echo "DB_USER=${{ env.DB_USER }}" >> .env
          echo "DB_PW=${{ env.DB_PW }}" >> .env
          echo "GITHUB_SHA=${{ env.GITHUB_SHA }}" >> .env
          echo "DOCKERHUB_USERNAME=${{ env.DOCKERHUB_USERNAME }}" >> .env
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PW }}

      - name: Build and tag image
        run: |
          IMAGE_NAME=${{ env.DOCKERHUB_USERNAME }}/be-log-let:${{ env.GITHUB_SHA }}
          docker build -t $IMAGE_NAME .

      - name: check docker image 
        run: |
          docker images

      - name: Tag and Push App Image
        run: |
          IMAGE_NAME=${{ env.DOCKERHUB_USERNAME }}/be-log-let:${{ env.GITHUB_SHA }}
          docker push $IMAGE_NAME

      
        
  deploy:
    name: Deploy to Droplet
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 
      - name: Copy .env file to Droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ env.KEY }}
          source: "docker-compose.yml"
          target: "~/be-log-let/"
          
      - name: SSH & Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ env.KEY }}
          script: |
            cd ~/be-log-let/  
            echo "${{ env.DOCKERHUB_PW }}" | docker login -u "${{ env.DOCKERHUB_USERNAME }}" --password-stdin
            # Create .env on remote for Docker Compose
            cat << 'EOF' > .env
            PORT=${{ env.PORT }}
            DB_HOST=${{ env.DB_HOST }}
            DB_PORT=${{ env.DB_PORT }}
            DB_USER=${{ env.DB_USER }}
            DB_PW=${{ env.DB_PW }}
            GITHUB_SHA=${{ env.GITHUB_SHA }}
            DOCKERHUB_USERNAME=${{ env.DOCKERHUB_USERNAME }}
            EOF
            # pull latest
            docker compose pull
            # stop & remove old
            docker stop myapp || true
            docker rm   myapp || true
            docker stop mydb || true
            docker rm   mydb   || true
            # run new
            docker compose up -d
